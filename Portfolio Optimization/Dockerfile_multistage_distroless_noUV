## Stage 1: Base Image with uv and Python
#FROM ghcr.io/astral-sh/uv:python3.11-bookworm-slim AS builder
#
#WORKDIR /app
#RUN apt-get update && apt-get install -y --no-install-recommends gcc && rm -rf /var/lib/apt/lists/*
#
#COPY pyproject.toml .
#COPY uv.lock .
#COPY app.py .
#COPY src/ ./src/
## Install dependencies using uv (assuming uv handles Poetry-like installations)
#RUN python -m venv /app/.venv && \
#    . /app/.venv/bin/activate
#RUN uv pip install -r pyproject.toml
#
#RUN uv venv /opt/venv
## Use the virtual environment automatically
#ENV VIRTUAL_ENV=/opt/venv
#
## Stage 2: Copy virtual environment and application code
#FROM gcr.io/distroless/python3
#
## Copy virtual environment and application code
##COPY --from=builder /app/.venv/bin/ /usr/local/lib/site-packages
#COPY --from=builder /opt/venv /opt/venv
#COPY --from=builder /app/app.py /app/app.py
#COPY --from=builder /app/src/ /app/src/
## Set the working directory
#WORKDIR /app

# Place entry points in the environment at the front of the path
FROM python:3.11-slim AS build-env
WORKDIR /app
COPY app.py .
COPY src/ src/
COPY requirements.txt .
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"
RUN pip install -r requirements.txt

FROM gcr.io/distroless/python3
WORKDIR /app
COPY --from=build-env /opt/venv /opt/venv
COPY --from=build-env /app /app
ENV PATH="/opt/venv/bin:$PATH"
ENV PYTHONPATH="/opt/venv/lib/python3.11/site-packages:/app"

#CMD ["/opt/venv/bin/python3", "/app/app.py"]
ENTRYPOINT ["/usr/bin/python3.11", "/app/app.py"]

